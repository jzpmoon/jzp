;; instruction template

(inst-def (Bload,"load",0004,2))
(inst-def (Bstore,"store",0010,2))
(inst-def (Bpush,"push",0014,2))
(inst-def (Bpopv,"popv",0020,1))
(inst-def (Bpop,"pop",0024,2))
(inst-def (Bjmp,"jmp",0030,3))
(inst-def (Bjmpi,"jmpi",0034,3))
(inst-def (Brefl,"refl",0037,3))
(inst-def (Bref,"ref",0040,3))
(inst-def (Bsetl,"setl",0043,3))
(inst-def (Bset,"set",0044,3))
(inst-def (Btop,"top",0050,2))
(inst-def (Beq,"eq",0362,1))
(inst-def (Bgt,"gt",0363,1))
(inst-def (Blt,"lt",0364,1))
(inst-def (Band,"and",0365,1))
(inst-def (Bor,"or",0366,1))
(inst-def (Bnot,"not",0367,1))
(inst-def (Badd,"add",0370,1))
(inst-def (Bsub,"sub",0371,1))
(inst-def (Bmul,"mul",0372,1))
(inst-def (Bdiv,"div",0373,1))
(inst-def (Bcall,"call",0374,1))
(inst-def (Breturn,"return",0375,1))
(inst-def (Bretvoid,"retvoid",0376,1))
(inst-def (Bnop,"nop",0377,1))
(inst-def (Vlabel,"label",0400,2))

(inst-tpl (load x) (load x))
(inst-tpl (store x) (store x))
(inst-tpl (push x) (push x))
(inst-tpl (popv) (popv))
(inst-tpl (pop x) (pop x))
(inst-tpl (jmp x) (jmp x))
(inst-tpl (jmpi x) (jmpi x))
(inst-tpl (refl x) (refl x))
(inst-tpl (ref x) (ref x))
(inst-tpl (setl x) (setl x))
(inst-tpl (set x) (set x))
(inst-tpl (top x) (top x))
(inst-tpl (eq) (eq))
(inst-tpl (gt) (gt))
(inst-tpl (lt) (lt))
(inst-tpl (and) (and))
(inst-tpl (or) (or))
(inst-tpl (not) (not))
(inst-tpl (add) (add))
(inst-tpl (sub) (sub))
(inst-tpl (mul) (mul))
(inst-tpl (div) (div))
(inst-tpl (call) (call))
(inst-tpl (return) (return))
(inst-tpl (retvoid) (retvoid))
(inst-tpl (nop) (nop))
(inst-tpl (label x) (label x))