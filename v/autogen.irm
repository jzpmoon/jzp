;; instruction template

(inst-def (Bload "load" 0004 2 1))
(inst-def (Bstore "store" 0010 2 1))
(inst-def (Bpush "push" 0014 2 1))
(inst-def (Bpopv "popv" 0020 1 0))
(inst-def (Bpop "pop" 0024 2 1))
(inst-def (Bjmp "jmp" 0030 3 1))
(inst-def (Bjmpi "jmpi" 0034 3 1))
(inst-def (Brefl "refl" 0037 3 1))
(inst-def (Bref "ref" 0040 3 1))
(inst-def (Bsetl "setl" 0043 3 1))
(inst-def (Bset "set" 0044 3 1))
(inst-def (Btop "top" 0050 2 1))
(inst-def (Beq "eq" 0362 1 0))
(inst-def (Bgt "gt" 0363 1 0))
(inst-def (Blt "lt" 0364 1 0))
(inst-def (Band "and" 0365 1 0))
(inst-def (Bor "or" 0366 1 0))
(inst-def (Bnot "not" 0367 1 0))
(inst-def (Badd "add" 0370 1 0))
(inst-def (Bsub "sub" 0371 1 0))
(inst-def (Bmul "mul" 0372 1 0))
(inst-def (Bdiv "div" 0373 1 0))
(inst-def (Bcall "call" 0374 1 0))
(inst-def (Breturn "return" 0375 1 0))
(inst-def (Bretvoid "retvoid" 0376 1 0))
(inst-def (Bnop "nop" 0377 1 0))
(inst-def (Vlabel "label" 0400 2 1))

(inst-tpl S (load x) (load x))
(inst-tpl S (store x) (store x))
(inst-tpl S (push x) (push x))
(inst-tpl S (popv) (popv))
(inst-tpl S (pop x) (pop x))
(inst-tpl S (jmp x) (jmp x))
(inst-tpl S (jmpi x) (jmpi x))
(inst-tpl S (refl x) (refl x))
(inst-tpl S (ref x) (ref x))
(inst-tpl S (setl x) (setl x))
(inst-tpl S (set x) (set x))
(inst-tpl S (top x) (top x))
(inst-tpl S (eq) (eq))
(inst-tpl S (gt) (gt))
(inst-tpl S (lt) (lt))
(inst-tpl S (and) (and))
(inst-tpl S (or) (or))
(inst-tpl S (not) (not))
(inst-tpl S (add) (add))
(inst-tpl S (sub) (sub))
(inst-tpl S (mul) (mul))
(inst-tpl S (div) (div))
(inst-tpl S (call) (call))
(inst-tpl S (return) (return))
(inst-tpl S (retvoid) (retvoid))
(inst-tpl S (nop) (nop))
(inst-tpl S (label x) (label x))
(inst-tpl ACC S)