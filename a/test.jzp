(src-load code.jzp)

(subr entry-subr ()
  (push test-fibonacci)
  (call)
  (return)
)

(subr test-make-array ()
  (var array)
  (push 1)
  (push make-array)
  (call)
  (store array)
  (push 10)
  (load array)
  (set 0)
  (load array)
  (ref 0)
  (push system-ostream)
  (push stream-output)
  (call)
  (return)
)

(subr test-g-var ()
  (push 1.0)
  (pop flag)
  (push flag)
  (push system-ostream)
  (push stream-output)
  (call)
  (return)
)

(subr test-factorial ()
  (push 10)
  (push factorial)
  (call)
  (push system-ostream)
  (push stream-output)
  (call)
  (return)
)

(subr test-fibonacci ()
  (push 23)
  (push fibonacci)
  (call)
  (push system-ostream)
  (push stream-output)
  (call)
  (return)
)

(subr test-count (x)
  (var tmp)
  (load x)
  (store tmp)
  (label l1)
  (push 1)
  (load tmp)
  (sub)
  (store tmp)
  (load tmp)
  (push 0)
  (eq)
  (not)
  (jmpi l1)
  (return)
)

(subr test-output ()
  (push "hello world!")
  (push system-ostream)
  (push stream-output)
  (call)
  (return)
)

(subr test-string ()
  (var char)
  (var tmp)
  (push 0)
  (store tmp)
  (label continue)
  (push "hello world!")
  (ref tmp)
  (store char)
  (load char)
  (push system-ostream)
  (push stream-output)
  (call)
  (load char)
  (push 101)
  (eq)
  (jmpi exit)
  (load tmp)
  (push 1)
  (add)
  (store tmp)
  (jmp continue)
  (label exit)
  (return)
)

(entry-subr)