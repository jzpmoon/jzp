/*
 *define cfun make-stream
 */
LDEFUN(make_stream,"make-stream",LSCOPE_GLOBAL,0,LRETVAL_NO,{
    ulog("call make-stream");
    return 0;
  });

/*
 *define cfun stream-output
 */
LDEFUN(stream_output,"stream-output",LSCOPE_GLOBAL,2,LRETVAL_NO,{
    URI_DEFINE;
    vslot slot = vcontext_params_get(ctx,0);
    vslot slot_stream = vcontext_params_get(ctx,1);
    vgc_obj* obj;
    vgc_extend* extend;
    lobj_stream* lstream;

    if (!vslot_is_ref(slot_stream)) {
      uabort("stream-output:stream error, not a ref!");
    }
    obj = vslot_ref_get(slot_stream,vgc_obj);
    if(!vgc_obj_typeof(obj,vgc_obj_type_extend)){
      uabort("stream-output:stream error, not a extend!");
    }
    extend = (vgc_extend*)obj;
    if(extend->oet != &lobj_stream_type){
      uabort("stream-output:stream error, not a stream!");
    }
    lstream = (lobj_stream*)extend;
    if (vslot_is_num(slot)) {
      double num = vslot_num_get(slot);
      if(ustream_write_dnum(lstream->stream,num,URI_REF)){
	uabort("stream-output:stream write number error!");	
      }
    } else if (vslot_is_ref(slot)) {
      vgc_obj* obj = vslot_ref_get(slot,vgc_obj);
      if (vgc_obj_typeof(obj,vgc_obj_type_string)) {
	vgc_string* str = (vgc_string*)obj;
	if(ustream_write_string(lstream->stream,str->u.c,URI_REF)){
	  uabort("stream-output:stream write string error!");
	}
      }
    } else {
      vslot_log(slot);
      uabort("stream-output:not support data type");
    }
    return 0;
  });

LDEFVAR(system_istream,"system-istream",LSCOPE_GLOBAL,{
    lobj_stream* lstream = lobj_istream_new_by_file(ctx->heap,stdin);
    return (vgc_obj*)lstream;
  });

LDEFVAR(system_ostream,"system-ostream",LSCOPE_GLOBAL,{
    lobj_stream* lstream = lobj_ostream_new_by_file(ctx->heap,stdout);
    return (vgc_obj*)lstream;
  });

LFUNONLOAD(base,{
    LDECLFUN(make_stream);
    LDECLFUN(stream_output);
    LDECLVAR(system_istream);
    LDECLVAR(system_ostream);
  })
